#set $u=$melati.getContextUtil("org.melati.poem.util.StringUtils")
package org.cggh.chassis.wwarn.ui.curator.client;

import org.cggh.chassis.generic.log.client.Log;
import org.cggh.chassis.generic.log.client.LogFactory;
import org.cggh.chassis.generic.widget.client.WidgetEvent;

import com.google.gwt.xml.client.Element;

/**
 * Generated event $melati.Object.Name from $(melati.Object.Widget.Name) to 
 * $(melati.Object.To.Name).
 *
 * BE SURE TO EDIT THE TEMPLATE NOT THE RENDERED RESULT
 *
 * DELETE_TO_MANUALLY_EDIT
 *
 */
public class $(melati.Object.Name)Event extends WidgetEvent {

	private static final Log log = LogFactory.getLog($(melati.Object.Name)Event.class);	
	

#foreach $property in $melati.Object.To.Properties #begin
	private $property.Type $property.Name;


	public void set$u.capitalised($(property.Name))($(property.Type) $u.uncapitalised($(property.Name))) {
		log.enter("set$u.capitalised($(property.Name))");		
		
		this.$u.uncapitalised($(property.Name)) = $u.uncapitalised($(property.Name));
		
		log.leave();
	}
	
	public $(property.Type) get$u.capitalised($(property.Name))() {
		log.enter("get$u.capitalised($(property.Name))");		
		
		log.debug("Returning $u.uncapitalised($(property.Name)) " + this.$u.uncapitalised($(property.Name)));

		log.leave();
		
		return this.$u.uncapitalised($(property.Name));
	}

#end


}
