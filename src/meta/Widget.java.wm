/**
 * 
 */
package org.cggh.chassis.wwarn.ui.curator.client;

import org.cggh.chassis.generic.log.client.Log;
import org.cggh.chassis.generic.log.client.LogFactory;
import org.cggh.chassis.generic.widget.client.DelegatingWidget;
import org.cggh.chassis.generic.widget.client.WidgetEventChannel;

#set $u=$melati.getContextUtil("org.melati.poem.util.StringUtils")

/**
 * @author timp
 *
 */
public class $(melati.Object.Name)Widget 
	extends DelegatingWidget<$(melati.Object.Name)WidgetModel, $(melati.Object.Name)WidgetRenderer> {

	private static final Log log = LogFactory.getLog($(melati.Object.Name)Widget.class);
	

	private $(melati.Object.Name)WidgetController controller;
	
#foreach $kid in $melati.Object.ChildWidgets #begin
	private $(kid.Name)Widget $u.uncapitalised($kid.Name)Widget;

#end

	@Override
	protected $(melati.Object.Name)WidgetModel createModel() {
		return new $(melati.Object.Name)WidgetModel();
	}

	public $(melati.Object.Name)WidgetModel getModel() {
		return model;
	}
	

	@Override
	protected $(melati.Object.Name)WidgetRenderer createRenderer() {
		return new $(melati.Object.Name)WidgetRenderer(this);
	}

	// Using init() rather than constructor because reset() uses init().
	public void init() {
		
		super.init();
		
		this.controller = new $(melati.Object.Name)WidgetController(this, this.model);


	}
	
	@Override
	public void refresh() {
	}
	
	
	
	public final WidgetEventChannel submitDataNavigationEventChannel = new WidgetEventChannel(this);

	
	

	

}
